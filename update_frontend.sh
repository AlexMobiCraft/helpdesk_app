#!/bin/bash
# Скрипт для обновления только Frontend части приложения

# Выход при ошибке
set -e

# --- 0. Определение переменных и начальная настройка ---
echo "== Запуск скрипта обновления Frontend =="
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
PROJECT_ROOT_DIR="$SCRIPT_DIR" # Предполагаем, что скрипт лежит в корне проекта
NVM_DIR="$HOME/.nvm"

cd "$PROJECT_ROOT_DIR" || { echo "ОШИБКА: Не удалось перейти в корневую директорию проекта: $PROJECT_ROOT_DIR"; exit 1; }
echo "Текущая директория: $(pwd)"

# --- 1. Получение последних изменений из Git ---
echo "
[1/4] Получение последних изменений из Git..."
if git pull; then
    echo "Изменения из Git успешно получены."
else
    echo "ОШИБКА: Не удалось получить изменения из Git. Проверьте настройки вашего репозитория и наличие несохраненных изменений."
    exit 1
fi

# --- 2. Установка/обновление Node.js и зависимостей проекта ---
echo "
[2/4] Установка/обновление Node.js и зависимостей проекта (frontend)..."
if command -v nvm &> /dev/null; then
    # shellcheck disable=SC1090
    source "$NVM_DIR/nvm.sh" # Загружаем nvm
    if [ -f ".nvmrc" ]; then
        echo "Обнаружен .nvmrc, установка/использование указанной версии Node.js..."
        nvm install || nvm use # Установить, если не установлена, или использовать, если установлена
    else
        echo "Файл .nvmrc не найден. Убедитесь, что нужная версия Node.js активна, или создайте .nvmrc в корне проекта."
    fi
else
    echo "ПРЕДУПРЕЖДЕНИЕ: NVM не найден. Пропуск автоматического управления версиями Node.js."
    echo "Убедитесь, что у вас установлена и активна совместимая версия Node.js (рекомендуется >=18)."
fi

if [ -d "frontend" ]; then
    cd frontend || { echo "ОШИБКА: Не удалось перейти в директорию frontend"; exit 1; }
    echo "Обновление зависимостей Node.js в директории $(pwd)..."
    if npm install; then
        echo "Зависимости Node.js для frontend обновлены."
    else
        echo "ОШИБКА: Не удалось обновить зависимости Node.js для frontend."
        cd ..
        exit 1
    fi
    cd .. # Возвращаемся в корневую директорию проекта
else
    echo "ОШИБКА: Директория frontend не найдена в $PROJECT_ROOT_DIR. Обновление невозможно."
    exit 1
fi

# --- 3. Сборка Frontend (Next.js) ---
echo "
[3/4] Сборка Frontend (Next.js)..."
if [ -d "frontend" ]; then
    cd frontend || { echo "ОШИБКА: Не удалось перейти в директорию frontend для сборки"; exit 1; }
    echo "Сборка Next.js приложения в директории $(pwd)..."
    if npm run build; then
        echo "Сборка Next.js завершена."
    else
        echo "ОШИБКА: Не удалось собрать Next.js приложение."
        cd ..
        exit 1
    fi
    cd ..
else
    # Эта проверка здесь избыточна, если предыдущий шаг прошел успешно и директория была найдена.
    echo "ОШИБКА: Директория frontend не найдена. Сборка невозможна."
    exit 1
fi

# --- 4. Завершение ---
echo "
[4/4] Обновление Frontend завершено успешно!"
echo "
ВАЖНО: Не забудьте перезапустить ваш frontend сервер (например, Next.js), чтобы применить изменения."
echo "Это можно сделать с помощью вашего скрипта stop.sh (если он останавливает фронтенд) и затем start.sh,"
echo "или если вы используете pm2: pm2 restart <имя_вашего_frontend_приложения_в_pm2>"

exit 0
